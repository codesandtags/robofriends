{"version":3,"sources":["api/robots.js","components/Card.js","components/CardList.js","components/SearchBox.js","components/Footer.js","components/GithubCorner.js","containers/App.js","serviceWorker.js","index.js"],"names":["robots","id","name","username","email","isPet","Card","robot","robotType","urlImage","className","src","alt","CardList","map","key","SearchBox","searchChange","type","autoFocus","placeholder","onChange","Footer","href","target","GithubCorner","url","aria-label","width","height","viewBox","style","fill","color","position","top","border","right","aria-hidden","d","App","useState","API","robotSearched","setRobotSearched","filteredRobots","filter","toLowerCase","includes","event","search","value","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.c36bea7c.chunk.js","sourcesContent":["export const robots = [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n    isPet: false\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n    isPet: false\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n    isPet: false\n  },\n  {\n    id: 4,\n    name: 'Churrita',\n    username: 'churris',\n    email: 'lis@kory.org',\n    isPet: false\n  },\n  {\n    id: 5,\n    name: 'Edwin Torres',\n    username: 'codesandtags',\n    email: 'codesandtags@gmail.com',\n    isPet: false\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n    isPet: false\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n    isPet: false\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n    isPet: false\n  },\n  {\n    id: 9,\n    name: 'Nala',\n    username: 'Delphine',\n    email: 'lamichimueca@cats.com',\n    isPet: true\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n    isPet: false\n  }\n];\n","import React from 'react';\n\nexport const Card = ({robot}) => {\n    const {name, email, id, isPet} = robot;\n    const imageSize = 150;\n    const robotType = isPet ? 4 : 1;\n    const urlImage = `https://robohash.org/${name}?size=${imageSize}x${imageSize}&set=set${robotType}`;\n\n    return (\n        <div className=\"tc grow bg-light-blue br3 pa2 ma3 dib bw2 shadow-5 w5 mr2\">\n            <img src={urlImage} alt={name}/>\n            <div>\n                <h2 className=\"f4\">{name}</h2>\n                <p className=\"ttl f6 lh-copy\">{email}</p>\n            </div>\n        </div>\n    )\n}","import React from 'react';\nimport {Card} from './Card';\n\nexport const CardList = ({robots}) => {\n    return (\n        <div className=\"flex flex-wrap w-80 center mw9 justify-center-m\">\n            {\n                robots.map(\n                    robot => <Card key={robot.id} robot={robot}/>\n                )\n            }\n        </div>\n\n    )\n}","import React from 'react';\n\nexport const SearchBox = ({searchChange}) => {\n    return (\n        <div className=\"pa2 ma2 flex justify-center center\">\n            <input\n                type=\"search\"\n                autoFocus\n                placeholder=\"Search your favorite robot ðŸ¤– \"\n                className=\"pa3 ba b--green bg-lightest-blue w-100 w-50-ns br2\"\n                onChange={searchChange}\n            />\n        </div>\n    )\n}","import React from 'react';\n\nexport const Footer = () => {\n    return (\n        <footer className=\"white-80 center w-100  pa2 ma4\">\n            <a href=\"https://robohash.org/\" className=\"white\" target=\"_blank\">\n                Images taken from Robohash ðŸ¤–\n            </a>\n        </footer>\n    )\n}\n","import React from 'react';\n\nimport './GithubCorner.css';\n\nexport const GithubCorner = ({url}) => {\n    return (\n        <div className=\"absolute top-0 right-0\">\n            <a href={url}\n               target=\"_blank\"\n               className=\"github-corner\"\n               aria-label=\"View source on GitHub\">\n                <svg width=\"80\" height=\"80\" viewBox=\"0 0 250 250\"\n                     style={{\n                         fill: '#151513',\n                         color: '#fff',\n                         position: 'absolute',\n                         top: 0,\n                         border: 0,\n                         right: 0,\n                     }}\n                     aria-hidden=\"true\">\n                    <path d=\"M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z\"></path>\n                    <path\n                        d=\"M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2\"\n                        fill=\"currentColor\"\n                        style={{'transform-origin': '130px 106px'}}\n                        className=\"octo-arm\"></path>\n                    <path\n                        d=\"M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z\"\n                        fill=\"currentColor\" className=\"octo-body\"></path>\n                </svg>\n            </a>\n        </div>\n    )\n}","import React, {useState} from 'react';\nimport './App.css';\nimport * as API from '../api/robots';\nimport {CardList} from '../components/CardList';\nimport {SearchBox} from '../components/SearchBox';\nimport {Footer} from '../components/Footer';\nimport {GithubCorner} from '../components/GithubCorner';\n\nfunction App() {\n    const [robots] = useState(API.robots);\n    const [robotSearched, setRobotSearched] = useState('');\n    const onSearchRobot = (event) => {\n        const search = event.target.value;\n        setRobotSearched(search);\n    };\n    const filteredRobots = robots.filter(robot => {\n        return robot.name.toLowerCase().includes(robotSearched.toLowerCase());\n    });\n\n    return (\n        <div className=\"tc\">\n            <GithubCorner url=\"https://github.com/codesandtags/robofriends\"/>\n            <h1 className=\"ma4 mt5-m f2 f1-l\">RoboFriends</h1>\n            <SearchBox searchChange={onSearchRobot} />\n            <CardList robots={filteredRobots}/>\n            <Footer />\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport 'tachyons';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}